import { pool } from "../db/connect.js"

export function addUser(id, chatId, firstName, lastname, username, ref, from, balance, rank, isAdmin, callback) {
    const query = `INSERT INTO users (id, chatId, firstName, lastName, username, origin, ref , balance, isAdmin, rank) VALUES (?,?,?,?,?,?,?,?,?,?)`

    pool.query(query, [id, chatId, firstName, lastname, username, from, ref, balance, isAdmin, rank], error => {
        if (error) {
            console.error("Error adding user:", error);
            return callback(error);
        }
        callback(null);
        console.info("User added successfully");
    });
}

export function checkUserExists(id, callback) {
    pool.query('SELECT * FROM users WHERE id = ?', [id], (error, results) => {
        if (error) {
            console.error("Error checking user:", error);
            return callback(error, null);
        }
        callback(null, results.length > 0);
    });
}

export async function checkAdmin(bot, chatId, id) {
    const query = 'SELECT isAdmin, username FROM users WHERE id = ?';

    pool.query(query, [id], async (error, results) => {
        try {
            if (error) {
                console.error("Error fetching user data:", error);
                return;
            }

            if (results.length === 0) {
                console.info("User not found in the database.");
                return await bot.sendMessage(chatId, `üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ E-Vito! üåü\n\n–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ...`, startKeyboard);
            }

            const user = results[0];

            if (user.isAdmin === true) {
                console.info("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä");
                await bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é ${user.username}! –í—ã –∞–¥–º–∏–Ω –∏ –≤–æ—Ç —á—Ç–æ –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å`, adminKeyboard);
            } else {
                console.info("–û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å");
            }
        } catch (error) {
            console.error("Error in checkAdmin function:", error);
        }
    });
}